diff --git a/js/scripts.js b/js/scripts.js
index 8f607c1..04dc459 100644
--- a/js/scripts.js
+++ b/js/scripts.js
@@ -11,6 +11,14 @@ function Game(){
   this.currentPlayer = this.player1;
 }
 
+Game.prototype.reportCurrentPlayer = function(){
+  if (this.currentPlayer == this.player1){
+    return "Player 1's turn";
+  } else{
+    return "Player 2's turn";
+  }
+}
+
 Game.prototype.runTurn = function(desiredX, desiredY){
 
   // mark a desired space with current player's symbol iff that space is available
@@ -32,6 +40,19 @@ Game.prototype.isTurn = function(player){
   return (this.currentPlayer === player);
 }
 
+Game.prototype.sayWhoWon = function(){
+  // if there are any winning configurations, the winner is the person who is not the current player, because runTurn swaps the player as its last task
+  if(this.currentBoard.hasThreeAcross() || this.currentBoard.hasThreeUpDown() || this.currentBoard.hasThreeDiagonally()){
+    if (this.currentPlayer === this.player1){
+      return "Player 2 wins!"
+    } else{
+      return "Player 1 wins!"
+    }
+  }else{
+    return "Game was a draw";
+  }
+}
+
 Game.prototype.isOver = function(){
   if (this.currentBoard.hasThreeAcross() || this.currentBoard.hasThreeUpDown() || this.currentBoard.hasThreeDiagonally() || this.currentBoard.isFull()){
     return true;
@@ -151,20 +172,32 @@ Board.prototype.find = function (xCoordinate, yCoordinate){
 // Front End
 $(function(){
   var currentGame = new Game();
-  console.log(currentGame.isTurn(currentGame.player1));
+  while(!currentGame.isOver()){
+    console.log(currentGame.reportCurrentPlayer());
+    $("#playForm").submit(function(){
+      var desiredXusrInput = parseInt($("#desiredXInput").val());
+      var desiredYusrInput = parseInt($("#desiredYInput").val());
+      currentGame.runTurn(desiredXusrInput, desiredYusrInput);
+      // might need to check what happens when someone mistakenly enters invalid coordinates
+    });
+  }
+  currentGame.sayWhoWon();
+
+
+  // console.log(currentGame.isTurn(currentGame.player1));
   // console.log(currentGame);
   // currentGame.currentBoard.spaceF.mark("X");
   // console.log(currentGame.currentBoard.spaceA);
   // console.log(currentGame.currentBoard.find(2,3).mark("X"));
-  currentGame.currentBoard.find(1,1).mark("O");
-  currentGame.currentBoard.find(1,2).mark("X");
-  currentGame.currentBoard.find(1,3).mark("O");
-  currentGame.currentBoard.find(2,1).mark("X");
-  currentGame.currentBoard.find(2,3).mark("O");
-  currentGame.currentBoard.find(2,2).mark("X");
-  currentGame.currentBoard.find(3,1).mark("O");
-  currentGame.currentBoard.find(3,2).mark("O");
-  currentGame.currentBoard.find(3,3).mark("X");
+  // currentGame.currentBoard.find(1,1).mark("O");
+  // currentGame.currentBoard.find(1,2).mark("X");
+  // currentGame.currentBoard.find(1,3).mark("O");
+  // currentGame.currentBoard.find(2,1).mark("X");
+  // currentGame.currentBoard.find(2,3).mark("O");
+  // currentGame.currentBoard.find(2,2).mark("X");
+  // currentGame.currentBoard.find(3,1).mark("O");
+  // currentGame.currentBoard.find(3,2).mark("O");
+  // currentGame.currentBoard.find(3,3).mark("X");
 
   // console.log(currentGame.currentBoard.isFull());
   // console.log(currentGame.isOver());
